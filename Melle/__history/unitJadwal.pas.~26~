unit unitJadwal;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Objects, FMX.Layouts, FMX.ListBox,
  IdHTTP, IdSSLOpenSSL, System.JSON, System.net.HttpClient;

type
  TformJadwal = class(TForm)
    Label3: TLabel;
    layoutData: TLayout;
    Label1: TLabel;
    Label2: TLabel;
    labelHari: TLabel;
    labelTanggal: TLabel;
    Label4: TLabel;
    labelSesi: TLabel;
    listBoxData: TListBox;
    Label6: TLabel;
    labelMateri: TLabel;
    Image2: TImage;
    Label7: TLabel;
    labelTempat: TLabel;
    labelSkemaPelatihan: TLabel;
    Label5: TLabel;
    Rectangle2: TRectangle;
    Label8: TLabel;
    labelWidyaiswara1: TLabel;
    labelWidyaiswara2: TLabel;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
    procedure addItem(nama_pelatihan, hari, tanggal, sesi, materi, tempat: string);
    procedure TampilList(IsiJSON: string);
  public
    { Public declarations }
  end;

var
  formJadwal: TformJadwal;

implementation

{$R *.fmx}
uses
  unitLogin;

procedure TformJadwal.FormCreate(Sender: TObject);
var
  IdHTTP: TIdHTTP;
  SSL: TIdSSLIOHandlerSocketOpenSSL;
  Response: string;
begin
  layoutData.Visible := False;
  IdHTTP := TIdHTTP.Create(nil);
  SSL := TIdSSLIOHandlerSocketOpenSSL.Create(nil);
  try
    Response := IdHTTP.Get('http://localhost/api_absensi/api.php?type=jadwal&id_user=' + formLogin.idPeserta.ToString); // Sesuaikan URL dan parameter id_user
    TampilList(Response);
  except
    on E: Exception do
//      ShowMessage('Error: ' + E.Message);
  end;
  IdHTTP.Free;
  SSL.Free;
end;

procedure TformJadwal.TampilList(IsiJSON: string);
var
  JSONValue: TJSONArray;
  JSONItem: TJSONObject;
  i: Integer;
  id_jadwal: Integer;
  nama_pelatihan, hari, tanggal, sesi, materi, tempat: string;
begin
  listBoxData.Clear;

  try
    JSONValue := TJSONObject.ParseJSONValue(IsiJSON) as TJSONArray;
    if Assigned(JSONValue) then
    begin
      for i := 0 to JSONValue.Count - 1 do
      begin
        JSONItem := JSONValue.Items[i] as TJSONObject;
        id_jadwal      := JSONItem.GetValue<Integer>('id_jadwal');
        nama_pelatihan := JSONItem.GetValue<string>('nama_pelatihan');
        hari           := JSONItem.GetValue<string>('hari');
        tanggal        := JSONItem.GetValue<string>('tanggal');
        sesi           := JSONItem.GetValue<string>('sesi');
        materi         := JSONItem.GetValue<string>('materi');
        tempat         := JSONItem.GetValue<string>('tempat');

        addItem(nama_pelatihan, hari, tanggal, sesi, materi, tempat) // Sesuaikan parameter untuk addItem
      end;
    end;
  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;

procedure TformJadwal.addItem(nama_pelatihan, hari, tanggal, sesi, materi, tempat: string);
var
  loClone: TLayout;
  lb: TListBoxItem;
begin
  // Menampilkan data pada label di dalam layout item list
  labelSkemaPelatihan.Text := nama_pelatihan;
  labelHari.Text := ': ' + hari;
  labelTanggal.Text := ': ' + tanggal;
  labelSesi.Text := ': ' + sesi;
  labelMateri.Text := ': ' + materi;
  labelTempat.Text := ': ' + tempat;

  // Membuat item list baru untuk setiap jadwal
  lb := TListBoxItem.Create(listBoxData);
  lb.Width := listBoxData.Width;
  lb.Height := layoutData.Height;
  lb.Selectable := false;

  // Clone layout dari template yang sudah ada
  loClone := TLayout(layoutData.Clone(lb));
  loClone.Width := lb.Width - 32;
  loClone.Position.X := 16;
  loClone.Position.Y := 0;
  loClone.Visible := true;

  // Menambahkan layout item ke dalam ListBox
  lb.AddObject(loClone);
  listBoxData.AddObject(lb);
end;

end.
